{{- define "services" -}}
//
// SERVICES
//
{{- range $service := .HttpServices }}

export class {{ $service.Name }} {
  private caller: CallerFunc;

  constructor(caller: CallerFunc) {
    this.caller = caller;
  }
  {{ range $method := $service.Methods }}
  {{ $method.Name | ToCamelCase }}({{ $method.Args | ToArgs }}): Promise<{{ $method | ToReturns }}> {
    return this.caller<respType.{{ $method.RespType }}>(
      {
        id: "",
        method: "{{ $method.Name }}",
        params: { {{ $method.Args | ToParams }} },
        abort: _opts?.signal,
        headers: _opts?.headers,
        withCredentials: _opts?.withCredentials,        
      },
      reqType.{{ $method.ReqType }},
      respType.{{ $method.RespType }}
    );
  }
  {{ end }}
}

{{- end }}

{{- end }}